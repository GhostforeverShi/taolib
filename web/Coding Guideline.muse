#title Coding Guideline

* The first (and maybe the only) thing you must remember -- K.I.S.S! 

Keep the implemetation as SIMPLE as possible. Less the dependancy,
less the codes -- quicker the speed, and easier to maintain. So try to
build specific but perfect tools. But leave the interface clean so
that other developers can easily add features.

Avoid RPY, SCIPY, NUMPY if you only need several functions from
them. Try to find some simple and short pieces of codes, or simple and
small alternative solutions.

 1. For CDF, PDF, and inverse CDF functions, change from RPY/SCIPY to
    Prob.py (in CoreLib/BasicStat/).

 2. To store data efficiently, change from NUMPY to pythonâ€™s own
    [[http://docs.python.org/lib/module-array.html][array class]].

 3. Draw figures? Let python generate plain text R script instead of
    calling R through rpy.

 4. Which database we should use? For small data, try to use SQLite3
    since it's serverless and very simple, and [[http://docs.python.org/lib/module-sqlite3.html][directly supported]] by
    Python2.5.

* Write test suites for your codes.

Please read the [[http://docs.python.org/lib/module-unittest.html][unittest module]] documents on python site. The test
suites must be put into [[https://research4.dfci.harvard.edu/svntrac/trunk/Cistrome/test/][test/]] for Cistrome repository

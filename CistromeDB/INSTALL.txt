* How to install CistromeDB w/ Django

** preparation

1. Python (>=2.5)
2. MySQL (>= 5)
3. mysql_python (>=1.2.2, patch it for python2.6, see Section 'patch
for mysql python')
4. httpd (>= 2.2)
5. mod_python (>=3.3)
6. Django ( svn 9549)
7. svn client

** Install Cistrome source tree

Check out the svn source tree.

$ svn co https://research4.dfci.harvard.edu/svntrac/trunk/Cistrome --username yourname

Modify settings.py.example to make your own settings.py file. Pay
attention to 'DATABASE_' values, 'ADMIN_MEDIA_PREFIX' and
'TEMPLATE_DIRS'. The 'TEMPLATE_DIRS' directives must include the paths
containing templates provided by CistromeDB.

Install it to the global python path ( you need to be the root)

$ python setup.py install

** Create MySQL database

Run the manage.py script in source tree.

$ python manage.py syncdb

** Modify httpd.conf

Add mod_python support by adding 'LoadModule python_module
modules/mod_python.so' to your httpd.conf.

Then at the end of httpd.conf, write

<Location "/CistromeDB/">
    SetHandler python-program
    PythonHandler django.core.handlers.modpython
    SetEnv DJANGO_SETTINGS_MODULE Cistrome.CistromeDB.settings
    PythonOption django.root ""
    PythonDebug On
</Location>

<Location "/accounts/">
    SetHandler python-program
    PythonHandler django.core.handlers.modpython
    SetEnv DJANGO_SETTINGS_MODULE Cistrome.CistromeDB.settings
    PythonOption django.root ""
    PythonDebug On
</Location>

Supposing your cistromeDB website will be accessed through
'http://xxx/CistromeDB/' and account system will be accessed thru
'http://xxx/accounts'.


* patch for mysql-python

Save the following content as a patch file named mysqlpython1.2.2.patch, then
run patch command in the source tree.


diff -rupN MySQL-python-1.2.2/MySQLdb/__init__.py MySQL-python-1.2.2_foo/MySQLdb/__init__.py
--- MySQL-python-1.2.2/MySQLdb/__init__.py	2007-02-26 14:00:32.000000000 -0500
+++ MySQL-python-1.2.2_foo/MySQLdb/__init__.py	2008-10-21 15:16:27.000000000 -0400
@@ -31,22 +31,19 @@ from MySQLdb.constants import FIELD_TYPE
 from MySQLdb.times import Date, Time, Timestamp, \
     DateFromTicks, TimeFromTicks, TimestampFromTicks
 
-from sets import ImmutableSet
-class DBAPISet(ImmutableSet):
+class DBAPISet(frozenset):
 
     """A special type of set for which A == x is true if A is a
     DBAPISet and x is a member of that set."""
 
     def __ne__(self, other):
-        from sets import BaseSet
-        if isinstance(other, BaseSet):
+        if isinstance(other, (set,frozenset)):
             return super(DBAPISet.self).__ne__(self, other)
         else:
             return other not in self
 
     def __eq__(self, other):
-        from sets import BaseSet
-        if isinstance(other, BaseSet):
+        if isinstance(other, (set,frozenset)):
             return super(DBAPISet, self).__eq__(self, other)
         else:
             return other in self
diff -rupN MySQL-python-1.2.2/MySQLdb/converters.py MySQL-python-1.2.2_foo/MySQLdb/converters.py
--- MySQL-python-1.2.2/MySQLdb/converters.py	2007-01-29 13:02:17.000000000 -0500
+++ MySQL-python-1.2.2_foo/MySQLdb/converters.py	2008-10-21 15:18:14.000000000 -0400
@@ -34,7 +34,6 @@ MySQL.connect().
 
 from _mysql import string_literal, escape_sequence, escape_dict, escape, NULL
 from constants import FIELD_TYPE, FLAG
-from sets import BaseSet, Set
 from times import *
 import types
 import array
@@ -42,7 +41,7 @@ import array
 def Bool2Str(s, d): return str(int(s))
 
 def Str2Set(s):
-    return Set([ i for i in s.split(',') if i ])
+    return set([ i for i in s.split(',') if i ])
 
 def Set2Str(s, d):
     return string_literal(','.join(s), d)
@@ -126,7 +125,7 @@ conversions = {
     types.BooleanType: Bool2Str,
     DateTimeType: DateTime2literal,
     DateTimeDeltaType: DateTimeDelta2literal,
-    Set: Set2Str,
+    set: Set2Str,
     FIELD_TYPE.TINY: int,
     FIELD_TYPE.SHORT: int,
     FIELD_TYPE.LONG: long,
diff -rupN MySQL-python-1.2.2/ez_setup.py MySQL-python-1.2.2_foo/ez_setup.py
--- MySQL-python-1.2.2/ez_setup.py	2007-02-24 16:09:07.000000000 -0500
+++ MySQL-python-1.2.2_foo/ez_setup.py	2008-10-21 16:13:59.000000000 -0400
@@ -14,7 +14,7 @@ the appropriate options to ``use_setupto
 This file can also be run as a script to install or upgrade setuptools.
 """
 import sys
-DEFAULT_VERSION = "0.6c5"
+DEFAULT_VERSION = "0.6c9"
 DEFAULT_URL     = "http://cheeseshop.python.org/packages/%s/s/setuptools/" % sys.version[:3]
 
 md5_data = {
@@ -39,6 +39,7 @@ md5_data = {
     'setuptools-0.6c5-py2.3.egg': 'ee9fd80965da04f2f3e6b3576e9d8167',
     'setuptools-0.6c5-py2.4.egg': 'afe2adf1c01701ee841761f5bcd8aa64',
     'setuptools-0.6c5-py2.5.egg': 'a8d3f61494ccaa8714dfed37bccd3d5d',
+    'setuptools-0.6c9-py2.6.egg': 'ca37b1ff16fa2ede6e19383e7b59245a'
 }
 
 import sys, os
